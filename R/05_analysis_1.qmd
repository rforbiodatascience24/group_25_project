---
title: "Analysis part 1: PCA"
format: html
editor: visual
---

```{r}
#| output: false
library("tidyverse")
library("broom")
library(ggforce)
source("99_proj_func.R")
```

```{r}
#| output: false
data_dir <- "../data"
data_file <- "/03_data_load.tsv.gz"
stats_file <- "/03_data_stats_load.tsv.gz"
df <- read_tsv(str_c(data_dir, data_file))
stats_df <- read_tsv(str_c(data_dir, stats_file))
```

In this script, we perform principal component analysis (PCA) on the data. The goal is to observe patterns and reduce dimensionality of the data. For this purpose we first must convert the data back to wide format.

```{r}
df <- df |> 
  pivot_wider(
    names_from = gene_ensembl,
    values_from = gene_expression
  ) |> 
    mutate(
    group = case_when(
      str_detect(experiment, "control") ~ "control", # If 'experiment' contains "control"
      str_detect(experiment, "tau") ~ "tau"         # If 'experiment' contains "tau"
    ),
    
      replicate = case_when(
      str_detect(experiment, "1") ~ "1",
      str_detect(experiment, "2") ~ "2",
      str_detect(experiment, "3") ~ "3"
    ) |> 
    as.factor()  # Convert to factor
  )
```

We will perform 3 different PCAs for each experiment to assess whether or not there are significant gene expression changes. For simplicity reasons we will first filter our genes according to the fold change values

```{r}
top_genes <- stats_df |> 
  select(gene_ensembl, var_reads) |> 
  arrange(desc(var_reads)) |> 
  select(gene_ensembl) |> 
  slice(1:5000) |> 
  pull()
```

```{r}
df |> 
  perform_PCA(type_experiment = "reads", top_genes)
```

```{r}
df |> 
  perform_PCA(type_experiment = "RPM", top_genes)
```

```{r}
df |> 
  perform_PCA(type_experiment = "RPKM", top_genes)
```

```{r}
df |> 
  perform_PCA_on_all_conditions(top_genes)
```
