---
title: "Describe data"
format:
  html:
    embed-resources: true
editor: visual
---

# Load data & libraries

```{r}
#| message: false
library("tidyverse")
library("dplyr")
library(patchwork)
```

From the augment script, we will examine the following files

1\) All data; significant genes, all replicates

2\) All_data_means; significant genes, mean of replicates

3\) Log data; significant genes, mean of replicates and fold change values

```{r}
data_dir <- "../data"
stats_data_file <- "/03_data_stats_load.tsv.gz"
filtered_stats_data_file <- "/03_data_filtered_stats.tsv.gz"
log_data_file <- "/03_data_log_load.tsv.gz" 

all_data <- read_tsv(str_c(data_dir, log_data_file))
all_data_means <- read_tsv(str_c(data_dir, stats_data_file))
log_data <- read_tsv(str_c(data_dir, filtered_stats_data_file))
```

# Attributes

For each gene ID, there are

-   mean_reads: raw count of sequencing reads mapped to a gene

-   mean_rpm: normalized value of mean_reads

-   mean_rpkm: normalized value of mean_rpm, by considering length of gene (in kilobases)

-   gene expression value: how much the gene is expressed (i.e. how actively it's producing its corresponding RNA)

We will pivot the data to long format

```{r}
all_data_long <- all_data |> 
  pivot_longer(
    cols = contains(c("control", "tau")), 
    names_to = "experiment", 
    values_to = "gene_expression"
  )
```

# Size of each data and number of genes

In table below can be seen the dimensions of the 3 data frames. In log & filter data, the number of rows = number of genes. In all data this is not the case, so we find the number of genes separately.

```{r}
unique_genes <- all_data_long |>
  select(gene_ensembl) |>
  distinct()

no_of_genes <- c(All_data_long = nrow(unique_genes),
                 All_data_means = nrow(all_data_means),
                 Log_data = nrow(log_data))

data_frames <- list(
  All_data_long = all_data_long,
  all_data_means = all_data_means,
  Log_data = log_data
)

# Summarize their dimensions in a tidy table
summary_table <- map_dfr(
  data_frames,
  ~ tibble(
    rows = nrow(.x),
    columns = ncol(.x),
    genes = nrow(unique_genes) # Assuming unique_genes is relevant to all
  ),
  .id = "data_frame"
)

summary_table
```

# Gene expression values

Let's find the range of the gene expression values. The log transformation performed in the augment script explains the negative values.

```{r}
gene_expression_summary <- all_data_long |>
  #group_by(gene_ID) |>
  summarize(
    mean_value = mean(gene_expression),
    min_value = min(gene_expression),
    max_value = max(gene_expression),
    count = n())

gene_expression_summary
```

# Pivot log data

We will also create a long format of the log data with mean values for plot vizualization

```{r}
all_data_means_long <- all_data_means |> 
  select(-starts_with("fold")) |> 
  pivot_longer(
    cols = contains(c("control", "tau")), 
    names_to = "experiment", 
    values_to = "gene_expression"
  )
```

# Visualizing the data

The data has been visualised below in separated plots for each experiment. Despite not accounting for different gene types, the plots depict a clear trend, with the control samples consistantly presenting greater gene expression. Furthermore, the fact that the control and tau curves follow such a similar shape indicates that is it likely that the increased tau protein has caused a linear shift in the gene expression.

```{r}
RPKMplot <- log_data_long |>
  filter(str_detect(experiment,
                    pattern = "RPKM")) |> 
  ggplot(mapping = aes(x = gene_expression,
                       fill = experiment)) + 
  geom_density(alpha = 0.5) + 
  theme_minimal() + 
  labs(title = "RPKM Data",
       y = "Density",
       x = "Mean Gene Expression")

RPMplot <- log_data_long |>
  filter(str_detect(experiment,
                    pattern = "RPM")) |> 
  ggplot(mapping = aes(x = gene_expression,
                       fill = experiment)) + 
  geom_density(alpha = 0.5) + 
  theme_minimal() + 
  labs(title = "RPM Data",
       y = "Density",
       x = "Mean Gene Expression")

readsplot <- log_data_long |>
  filter(str_detect(experiment,
                    pattern = "reads")) |> 
  ggplot(mapping = aes(x = gene_expression,
                       fill = experiment)) + 
  geom_density(alpha = 0.5) + 
  theme_minimal() + 
  labs(title = "Reads Data",
       y = "Density",
       x = "Mean Gene Expression")

readsplot
# Combining the plots above each other
combined_plot <- RPKMplot / RPMplot / readsplot
combined_plot
```
